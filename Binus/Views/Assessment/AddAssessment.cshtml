
@{
    ViewBag.Title = "Assessment - Binus Maya";
}

@section css
{
    <link rel="stylesheet" type="text/css" href="~/Content/css/AddAssessment.css">
}

<div class="site-content" id="site-content">
    <section class="breadcrumb">
        <div class="container">
            <div class="wrap">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Assessment</a></li>
                    <li>Add Assessment</li>
                </ul>
            </div>
        </div>
    </section>

    <section class="page-heading">
        <div class="container">
            <h1>Add Assessment</h1>
        </div>
    </section>

    <div class="main-content has-widget" id="main-content">
        <div class="container">
            <div class="box-container">
                <div class="single-content popup-content" id="target-id">
                    <div class="page-sub-heading">
                        <div class="row" style="height:30px;">
                            <div class="column two-thirds ">
                                <h2 style="line-height:40px;">Assessment Detail</h2>
                            </div>
                            <div class="column one-third">
                                <p style="float:right;">
                                    <a href="#popup_confirmation" class="fancybox-trigger fancbox.ajax button button-primary" id="button_save">Save</a>
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <form>
                            <span class="alert is-success" style="display: none;">
                                Data has been saved.
                            </span>
                            <p>
                                <label>Assessment Type</label>
                                <span class="custom-combobox">
                                    <select name="select_assessment_type">
                                        <option disabled selected value="0"> -- SELECT AN OPTION -- </option>
                                    </select>
                                </span>
                            </p>

                            <p>
                                <label>Assessment Title<span class="required">*</span></label>
                                <input type="text" name="input_assessment_title">
                            </p>

                            <p>
                                <label>Description<span class="required">*</span></label>
                                <textarea name="textarea_description"></textarea>
                            </p>

                            <div class="assessments" id="assessment-container">

                            </div>


                            @RenderPage("~/Views/Shared/Assessment/AssessmentIntelligence.cshtml")

                            @RenderPage("~/Views/Shared/Assessment/AssessmentSensory.cshtml")

                            @RenderPage("~/Views/Shared/Assessment/AssessmentProcrasinator.cshtml")
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="popup-content-dialog container" id="popup_confirmation" style="display:none;">
    <div class="popup-wrapper">
        <form>
            <p>Save confirmation</p>
            <div class="row action">
                <div class="col-md-6 popup-button-wrapper">
                    <button href="#popup_loading" class="fancybox-trigger fancbox.ajax button button-primary" id="button_yes">Yes</button>
                </div>

                <div class="col-md-6 popup-button-wrapper">
                    <button class="button button-primary" id="button_no">No</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="popup-content-dialog container" id="popup_loading" style="display:none;">
    <div class="loader-wrapper">
        <span class="loader">
            <span class="indicator"></span>
            <span class="progress-text">Loading...</span>
        </span>
    </div>
</div>


@section scripts
{
    <script type="text/javascript">
        const assessmentContainer = $("#assessment-container");
        const assessmentIntelligence = $("#assessment-intelligence");
        const assessmentProcrasinator = $("#assessment-procrasinator");
        const assessmentSensory = $("#assessment-sensory");
        const ascii_A = 65;
        
        var sensories = [];


        //START DOCUMENT
        $(document).ready(function() {
            $.ajax
            ({
                method: "GET",
                url: "/api/AssessmentType/getAll",
                success: function(data) {
                    data.forEach(function(value) {
                        $("select[name='select_assessment_type']").append("<option value="+value.assessmentTypeID+">"+value.assessmentType+"</option>")
                    });
                }
            });
        });

        $("button").click(function(event) { event.preventDefault(); });

        $(document).on("click","button",function(event) { event.preventDefault(); });

        $("select[name='select_assessment_type']").change(function() {
            var selected=parseInt($(this).val());
            let template;
            switch(selected) {
                case 1:
                    assessmentContainer.empty();
                    template=assessmentIntelligence;
                    template=template.clone();
                    template.removeClass("template");
                    template.show(); 
                    assessmentContainer.append(template);
                    $("#button_add_statement_intelligence").trigger("click");
                    $("#button_add_score_intelligence").trigger("click");
                    break;
                case 2:
                    assessmentContainer.empty();
                    template = assessmentSensory;
                    template = template.clone();
                    template.removeClass("template");
                    template.show();
                    assessmentContainer.append(template);
                    $("#button_add_sensory").trigger("click");
                    $("#button_add_score_sensory").trigger("click");
                    $("#button_add_statement_sensory").trigger("click");
                    break;  
                case 3:
                    assessmentContainer.empty();
                    template=assessmentProcrasinator;
                    template=template.clone();
                    template.removeClass("template");
                    template.show();
                    assessmentContainer.append(template); 
                    $("#button_add_statement_procrasinator").trigger("click");
                    $("#button_add_agreement_procrasinator").trigger("click");
                    $("#button_add_score_procrasinator").trigger("click");
                    break;
            }
        });

        //START INTELLIGENCE
        $(document).on("click","#button_add_statement_intelligence",function() {
            let template=assessmentContainer.find(".template").first();
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            template=template.clone();
            template.removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-intelligence").length);
            template.find(".statement-detail-no").text("A");
            container.append(template);
        });
        
        $(document).on("click",".add-statement-detail-intelligence",function() {
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            let template=container.find(".statement-detail").first();
            template=template.clone();
            let statementIndex=$(this).parents(".statement-intelligence").index();
            let currentStatementContainer=container.find(".statement-intelligence").eq(statementIndex).find(".statement-details-container").first();
            currentStatementContainer.append(template);

            let number=container.find(".statement-intelligence").eq(statementIndex).
                find(".statement-detail").length

            //to return ascii from number / 65 = 'A'
            template.find(".statement-detail-no").text(String.fromCharCode(number+ascii_A-1));
        });
        
        $(document).on("click","#button_add_score_intelligence",function() {
            let container=assessmentContainer.find("#score-intelligence-container").first();
            let template=container.find(".score-intelligence").first();
            template=template.clone();
            template.removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score").length);
            container.append(template);
        });

        $(document).on("click",".remove-statement-intelligence",function() {
            $(this).parents(".statement-intelligence").remove();
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            let statements=container.find(".statement-intelligence:not(.template)");
            statements.each(function(i,statement) {
                $(statement).find(".statement-no").text(i+1);
            });
        });

        $(document).on("click",".remove-statement-detail-intelligence",function() {
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            let statementIndex=$(this).parents(".statement").index();
            $(this).parents(".statement-detail").remove();
            let statementDetails=container.find(".statement").eq(statementIndex).find(".statement-detail");

            statementDetails.each(function(i,statementDetail) {
                $(statementDetail).find(".statement-detail-no").text(String.fromCharCode(ascii_A+i));
            });
        });

        $(document).on("click",".remove-score-intelligence",function() {
            $(this).parents(".score-intelligence").remove();
            let container=assessmentContainer.find("#score-intelligence-container").first();

            let scores=container.find(".score:not(.template)");
            scores.each(function(i,score) {
                $(score).find(".score-no").text(i+1);
            });
        });
        //END INTELIGENCE

        //START SENSORY
        $(document).on("click", "#button_add_sensory", function(){
            let container = assessmentContainer.find("#sensories-container").first();
            let template = container.find(".template").first();
            template = template.clone();
            template.removeClass("template");
            template.show();

            template.find(".sensory-no").text(container.find(".sensory").length);
            container.append(template);
        });

        $(document).on("click", ".remove-sensory", function(){
            $(this).parents(".sensory").remove();
            let container = assessmentContainer.find("#sensories-container").first();
            let sensories = container.find(".sensory:not(.template)");
            sensories.each(function(i, sensory){
                $(sensory).find(".sensory-no").text(i+1);
            });
        });
        
        $(document).on("click", "#button_add_score_sensory", function(){
            let container = assessmentContainer.find("#scores-sensory-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score-sensory").length);
            container.append(template);
        });

        $(document).on("click", ".remove-score-sensory", function(){
            $(this).parents(".score-sensory").remove();
            let container = assessmentContainer.find("#scores-sensory-container").first();
            let scores = container.find(".score-sensory:not(.template)");
            scores.each(function(i, score){
                $(score).find(".score-no").text(i+1);
            });
        });

        $(document).on("click", "#button-finish", function(){
            let disabledArea = assessmentContainer.find(".assessment-sensory:not(.template)>.sensories").first();
            let buttonCancel=assessmentContainer.find(".assessment-sensory:not(.template)").find("#button-cancel");

            disabledArea.addClass("disabled-area");
            
            buttonCancel.show();
            $(this).hide();

            let currentStatementsContainer = assessmentContainer.find(".assessment-sensory:not(.template)>.statements-sensory").first();
            currentStatementsContainer.removeClass("disabled-area");
            
            sensories = [];
            $(".sensory:not(.template)").each(function(i)
            {
                sensories.push
                    ({ 
                        sensory : $(this).find("input[name='input-sensory']").val()
                    });
            });


            console.log(sensories);

            //get last row from sensories table
            $.ajax({
                method: "GET",
                url: "/api/assessment/getLastSensory",
                success: function(data) {
                    let fk_sensoryID = data;
                    $.each(sensories,function(i,value) {
                        $("select[name='select-sensory']").append("<option value='"+(fk_sensoryID+i+1)+"'>"+value.sensory+"</option>");
                    });
                }
            });
        });

        $(document).on("click", "#button-cancel", function(){
            let disabledArea = assessmentContainer.find(".assessment-sensory:not(template)>.sensories").first();
            let buttonFinish = assessmentContainer.find(".assessment-sensory:not(template)").find("#button-finish");
            
            disabledArea.removeClass("disabled-area");

            buttonFinish.show();
            $(this).hide();

            let currentStatementsContainer=assessmentContainer.find(".assessment-sensory:not(.template)>.statements-sensory").first();
            currentStatementsContainer.addClass("disabled-area");
        });

        $(document).on("click","#button_add_statement_sensory", function(){
            let container = assessmentContainer.find("#statements-sensory-container").first();
            let template = container.find(".template").first();
            template = template.clone();
            template.removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-sensory").length);
            container.append(template);
        });

        $(document).on("click", ".remove-statement-sensory", function(){
            $(this).parents(".statement-sensory").remove();
            let container = assessmentContainer.find("#statements-sensory-container").first();
            let statements = container.find(".statement-sensory:not(.template)");
            statements.each(function(i, statement){
                $(statement).find(".statement-no").text(i+1);
            });
        });
        //END SENSORY
        
        //START PROCRASINATOR
        $(document).on("click", "#button_add_statement_procrasinator", function(){            
            let container = assessmentContainer.find("#statements-procrasinator-container").first();
            let template = container.find(".template").first();
            template = template.clone();
            template.removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-procrasinator").length);
            container.append(template);
        });

        $(document).on("click",".remove-statement-procrasinator",function() {
            $(this).parents(".statement-procrasinator").remove();
            let container = assessmentContainer.find("#statements-procrasinator-container").first();
            let statements = container.find(".statement-procrasinator:not(.template)");
            statements.each(function(i, statement){
                $(statement).find(".statement-no").text(i+1);
            });
        });

        $(document).on("click","#button_add_agreement_procrasinator",function() {
            let container = assessmentContainer.find("#agreements-procrasinator-container").first();
            let template = container.find(".template").first();
            template = template.clone();
            template.removeClass("template");
            template.show();

            template.find(".agreement-no").text(container.find(".agreement").length);
            container.append(template);
        });

        $(document).on("click",".remove-agreement-procrasinator",function() {
            $(this).parents(".agreement").remove();
            let container=assessmentContainer.find("#agreements-procrasinator-container").first();
            let agreements=container.find(".agreement:not(.template)");
            agreements.each(function(i,agreement) {
                $(agreement).find(".agreement-no").text(i+1);
            });
        });

        $(document).on("click","#button_add_score_procrasinator", function(){
            let container = assessmentContainer.find("#scores-procrasinator-container").first();
            let template = container.find(".template").first();
            template = template.clone();
            template.removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score-procrasinator").length);
            container.append(template);
        });

        $(document).on("click", ".remove-score-procrasinator", function(){
            $(this).parents(".score-procrasinator").remove();
            let container = assessmentContainer.find("#scores-procrasinator-container").first();
            let scores = container.find(".score-procrasinator:not(.template)");
            scores.each(function(i, score){
                $(score).find(".score-no").text(i+1);
            });
        });
        //END PROCRASINATOR

        $("#button_no").click(function(){
            parent.$.fancybox.close();
        });

        $("#button_yes").click(function() {
            let assessmentType = parseInt($("select[name='select_assessment_type']").val());
           
            switch(assessmentType)
            {
                case 1:
                    let statementIntelligences=[];
                    let scoreIntelligences=[];

                    //add assessment intelligence
                    $(".statement-intelligence:not(.template)").each(function() {
                        let statementDetailIntelligences=[];
                        let temp=$(this).find(".statement-detail");
                        temp.each(function() {
                            statementDetailIntelligences.push({
                                statementDetailIntelligence: $(this).find("input[name='input_statement_detail']").val()
                            });
                        });
                        statementIntelligences.push({
                            statementIntelligence: $(this).find("input[name='input_statement']").val(),
                            statementDetailIntelligences: statementDetailIntelligences
                        });
                    });

                    $(".score-intelligence:not(.template)").each(function() {
                        scoreIntelligences.push({
                            scoreValue: $(this).find("input[name='input_score_value']").val(),
                            scoreWord: $(this).find("input[name='input_score_word']").val()
                        });
                    });

                    $.ajax({
                        method: "POST",
                        url: "/api/assessment/createAssessmentIntelligence",
                        data:
                        {
                            assessmentTitle: $("input[name='input_assessment_title']").val(),
                            assessmentDescription: $("textarea[name='textarea_description']").val(),
                            type: $("select[name='select_assessment_type']").val(),
                            statementIntelligences: statementIntelligences,
                            scoreIntelligences: scoreIntelligences
                        },
                        success: function(data) {
                            console.log(data);
                            parent.$.fancybox.close();
                            assessmentContainer.empty();
                            $(".is-success").show();
                            $("input[name='input_assessment_title']").val('');
                            $("textarea[name='textarea_description']").val('');
                            $("select[name='select_assessment_type']").val(0).change();
                        }
                    });
                    break;
                case 2:
                    let statementSensories = [];
                    let scoreSensories = [];
                    let sensories = [];

                    $(".sensory:not(.template)").each(function() {
                        sensories.push
                            ({
                                sensory: $(this).find("input[name='input-sensory']").val()
                            });
                    });


                    $(".statement-sensory:not(.template)").each(function()
                    {
                        statementSensories.push
                            ({
                                statementSensory : $(this).find("input[name='input-statement-sensory']").val(),
                                sensoryID : $(this).find("select[name='select-sensory']").val()
                            });
                    });

                    $(".score-sensory:not(.template)").each(function(){
                        console.log("test");
                        scoreSensories.push({
                            scoreWord : $(this).find("input[name='input-score-word']").val(),
                            scoreValue : $(this).find("input[name='input-score-value']").val()
                        });
                    });


                    

                    $.ajax({
                        method : "POST",
                        url : "/api/assessment/createAssessmentSensory",
                        data :
                        {
                            assessmentTitle: $("input[name='input_assessment_title']").val(),
                            assessmentDescription: $("textarea[name='textarea_description']").val(),
                            type: $("select[name='select_assessment_type']").val(),
                            statementSensories : statementSensories,
                            sensories : sensories,
                            scoreSensories : scoreSensories
                        },
                        success: function(data)
                        {
                            console.log(data);
                            parent.$.fancybox.close();
                            assessmentContainer.empty();
                            $(".is-success").show();
                            $("input[name='input_assessment_title']").val('');
                            $("textarea[name='textarea_description']").val('');
                            $("select[name='select_assessment_type']").val(0).change();
                        }
                    });  
                    break;
                case 3:
                    //add assessment procrasinator
                    let statementProcrasinators = [];
                    let scoreProcrasinators = [];
                    let agreements = [];

                    $(".statement-procrasinator:not(.template)").each(function()
                    {
                        statementProcrasinators
                            .push({statementProcrasinator : $(this).find("input[name='input-statement-procrasinator']").val()});
                    });
                            

                    $(".agreement:not(.template)").each(function()
                    {
                        agreements.push({agreement : $(this).find("input[name='input-agreement']").val()});
                    });

                    $(".score-procrasinator:not(.template)").each(function()
                    {
                        scoreProcrasinators.push({
                            scoreWord : $(this).find("input[name='input-score-word']").val(),
                            startValue : $(this).find("input[name='input-start-value']").val(),
                            endValue : $(this).find("input[name='input-end-value']").val()
                        });
                    });

                    
                    $.ajax({
                        method: "POST",
                        url: "/api/assessment/createAssessmentProcrasinator",
                        data:
                        {
                            assessmentTitle: $("input[name='input_assessment_title']").val(),
                            assessmentDescription: $("textarea[name='textarea_description']").val(),
                            type: $("select[name='select_assessment_type']").val(),
                            statementProcrasinators: statementProcrasinators,
                            agreements: agreements,
                            scoreProcrasinators: scoreProcrasinators
                        },
                        success: function(data) {
                            console.log(data);
                            parent.$.fancybox.close();
                            assessmentContainer.empty();
                            $(".is-success").show();
                            $("input[name='input_assessment_title']").val('');
                            $("textarea[name='textarea_description']").val('');
                            $("select[name='select_assessment_type']").val(0).change();
                        }
                    });
                    break;
            }
        });
    </script>
}