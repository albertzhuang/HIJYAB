
@{
    ViewBag.Title = "Binus University";
}

@section css
{
    <link rel="stylesheet" type="text/css" href="~/Content/css/AddAssessment.css">
}

<div class="site-content" id="site-content">
    <section class="breadcrumb">
        <div class="container">
            <div class="wrap">
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="#">Assessment</a></li>
                    <li><a href="#">Manage Assessment</a></li>
                    <li>Update Assessment</li>
                </ul>
            </div>
        </div>
    </section>

    <section class="page-heading">
        <div class="container">
            <h1>Update Assessment</h1>
        </div>
    </section>

    <div class="main-content has-widget" id="main-content">
        <div class="container">
            <div class="box-container">
                <div class="single-content popup-content" id="target-id">
                    <div class="page-sub-heading">
                        <div class="row" style="height:30px;">
                            <div class="column two-thirds ">
                                <h2 style="line-height:40px;" class="assessment-type"></h2>
                            </div>
                            <div class="column one-third">
                                <p style="float:right;">
                                    <a href="#popup_confirmation" class="fancybox-trigger fancbox.ajax button button-primary" id="button-update">Update</a>
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <form>
                            <p>
                                <label>Assessment Title<span class="required">*</span></label>
                                <input type="text" name="input_assessment_title">
                            </p>

                            <p>
                                <label>Description<span class="required">*</span></label>
                                <textarea name="textarea_description"></textarea>
                            </p>

                            <div class="assessments" id="assessment-container">

                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@RenderPage("~/Views/Shared/AssessmentAdmin/AssessmentIntelligence.cshtml")
@RenderPage("~/Views/Shared/AssessmentAdmin/AssessmentSensory.cshtml")
@RenderPage("~/Views/Shared/AssessmentAdmin/AssessmentProcrasinator.cshtml")

@RenderPage("~/Views/Shared/Popup/PopupConfirmation.cshtml")
@RenderPage("~/Views/Shared/Popup/PopupLoading.cshtml")
@RenderPage("~/Views/Shared/Popup/PopupSuccess.cshtml")
@RenderPage("~/Views/Shared/Popup/PopupError.cshtml")

@section scripts
{
    <script type="text/javascript">
        const assessmentContainer=$("#assessment-container");
        const assessmentIntelligence=$("#assessment-intelligence");
        const assessmentProcrasinator=$("#assessment-procrasinator");
        const assessmentSensory=$("#assessment-sensory");
        const ascii_A=64;

        var sensories=[];


        $("button").click(function(event) { event.preventDefault(); });

        $(document).on("click","button",function(event) { event.preventDefault(); });

        //START DOCUMENT
        $(document).ready(function() {
            let detailTemplate = assessmentIntelligence.find(".statement-detail").first();
            detailTemplate.addClass("template");
            detailTemplate.hide();

            $.ajaxSetup({
                headers: { "Authorization": "Bearer "+sessionStorage.getItem("access_token") }
            }); 

            $.ajax({
                method :"GET",
                url: "/api/assessment/getAssessment",
                beforeSend: function() {
                    $.fancybox("#popup_loading");
                },
                data: {
                    assessmentID : localStorage.getItem("assessmentID")
                },
                success  : function(data){
                    //start value
                    parent.$.fancybox.close();
                    localStorage.setItem("assessmentTypeID", data.assessmentTypeID);
                    $(".assessment-type").text(data.assessmentType);
                    $("input[name='input_assessment_title']").val(data.assessmentTitle);
                    $("textarea[name='textarea_description']").val(data.assessmentDescription);
                    let assessmentTypeID = parseInt(data.assessmentTypeID);
                    
                    let template;
                    switch(assessmentTypeID) {
                        case 1: 
                            assessmentContainer.empty();
                            template=assessmentIntelligence;
                            template=template.clone();
                            template.removeClass("template");
                            template.show();
                            assessmentContainer.append(template);

                            $.ajax({
                                method : "GET",
                                url : "/api/assessment/getCurrentAssessmentIntelligence",
                                data: {
                                    assessmentID : localStorage.getItem("assessmentID")
                                },
                                success: function(data) {
 
                                    data.statementIntelligences.forEach(function(value){
                                        $("#button_add_statement_intelligence").trigger("click");
                                        let currentContainer=assessmentContainer.find("#statements-intelligence-container").first();
                                        let currentAssessment = currentContainer.find(".statement-intelligence").last();
                                        currentAssessment.find("input[name='input_statement']").val(value.statementIntelligence);
                                        
                                        value.statementDetailIntelligences.forEach(function(valueDetail){
                                            currentAssessment.find(".add-statement-detail-intelligence").trigger("click");
                                            currentAssessment.find("input[name='input_statement_detail']").val(valueDetail.statementDetailIntelligence);
                                        });
                                    });

                                    data.scoreIntelligences.forEach(function(value){
                                        $("#button_add_score_intelligence").trigger("click");
                                        let currentContainer=assessmentContainer.find("#score-intelligence-container").first();
                                        let lastScore = currentContainer.find(".score-intelligence:not(.template)").last();
                                        lastScore.find("input[name='input_score_word']").val(value.scoreWord);
                                        lastScore.find("input[name='input_score_value']").val(value.scoreValue);
                                    });
                                }
                            });
                            break;
                        case 2 :
                            assessmentContainer.empty();
                            template=assessmentSensory;
                            template=template.clone();
                            template.removeClass("template");
                            template.show();
                            assessmentContainer.append(template);

                            $.ajax({
                                method : "GET",
                                url: "/api/assessment/getCurrentAssessmentSensory",
                                data: {
                                    assessmentID : localStorage.getItem("assessmentID")
                                },
                                success: function(data) {
                                    console.log(data);
                                    data.sensories.forEach(function(value){
                                        $("#button_add_sensory").trigger("click");
                                        let currentContainer=assessmentContainer.find("#sensories-container").first();
                                        let currentSensory=currentContainer.find(".sensory").last();
                                        currentSensory.find("input[name='input-sensory']").val(value.sensory);
                                    });
                                    
                                    data.statementSensories.forEach(function(value){
                                        $("#button_add_statement_sensory").trigger("click");
                                        let currentContainer=assessmentContainer.find("#statements-sensory-container").first();
                                        let currentStatement = currentContainer.find(".statement-sensory").last();
                                        currentStatement.find("input[name='input-statement-sensory']").val(value.statementSensory);
                                        currentStatement.find("select[name='input-statement-sensory']").val(value.statementSensoryID);
                                    });

                                    data.scoreSensories.forEach(function(value){
                                        $("#button_add_score_sensory").trigger("click");
                                        let currentContainer=assessmentContainer.find("#scores-sensory-container").first();
                                        let currentScore = currentContainer.find(".score-sensory").last();
                                        currentScore.find("input[name='input-score-word']").val(value.scoreWord);
                                        currentScore.find("input[name='input-score-value']").val(value.scoreValue);
                                    });
                                }
                            });
                            break;
                        case 3:
                            assessmentContainer.empty();
                            template=assessmentProcrasinator;
                            template=template.clone();
                            template.removeClass("template");
                            template.show();
                            assessmentContainer.append(template);
                            
                            $.ajax({
                                method: "GET",
                                url: "/api/assessment/getCurrentAssessmentProcrasinator",
                                data: {
                                    assessmentID: localStorage.getItem("assessmentID")
                                },
                                success: function(data) {
                                    data.statementProcrasinators.forEach(function(value){
                                        $("#button_add_statement_procrasinator").trigger("click");
                                        let currentContainer=assessmentContainer.find("#statements-procrasinator-container").first();
                                        let currentStatement=currentContainer.find(".statement-procrasinator").last();
                                        console.log(currentStatement);
                                        currentStatement.find("input[name='input-statement-procrasinator']").val(value.statementProcrasinator);
                                    });

                                    data.agreements.forEach(function(value){
                                        $("#button_add_agreement_procrasinator").trigger("click");
                                        let currentContainer=assessmentContainer.find("#agreements-procrasinator-container").first();
                                        let currentAgreement=currentContainer.find(".agreement").last();
                                        currentAgreement.find("input[name='input-agreement']").val(value.agreement);
                                        currentAgreement.find("input[name='input-agreement-value']").val(value.agreementValue);
                                    });

                                    data.scoreProcrasinators.forEach(function(value){
                                        $("#button_add_score_procrasinator").trigger("click");
                                        let currentContainer=assessmentContainer.find("#scores-procrasinator-container").first();
                                        let currentScore=currentContainer.find(".score-procrasinator").last();
                                        currentScore.find("input[name='input-score-word']").val(value.scoreWord);
                                        currentScore.find("input[name='input-start-value']").val(value.startValue);
                                        currentScore.find("input[name='input-end-value']").val(value.endValue);
                                    });
                                }
                            });
                            break;
                    }
                }
            });
        });

        //START INTELLIGENCE
        $(document).on("click","#button_add_statement_intelligence",function() {
            let template=assessmentContainer.find(".template").first();
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").first().removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-intelligence").length);
            template.find(".statement-detail-no").text("A");
            container.append(template);
        });

        $(document).on("click",".add-statement-detail-intelligence",function() {
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            let template=container.find(".statement-detail").first();

            template=template.clone();
            template.removeClass("template");
            template.find("input[name='input_statement_detail']").removeClass("template");
            template.show();

            let statementIndex=$(this).parents(".statement-intelligence").index();
            let currentStatementContainer=container.find(".statement-intelligence").eq(statementIndex).find(".statement-details-container").first();
            currentStatementContainer.append(template);

            let number=container.find(".statement-intelligence").eq(statementIndex).
                find(".statement-detail:not(.template)").length

            //to return ascii from number / 65 = 'A'
            template.find(".statement-detail-no").text(String.fromCharCode(number+ascii_A));
            template.find(".input-field").removeClass("template");
        });

        $(document).on("click","#button_add_score_intelligence",function() {
            let container=assessmentContainer.find("#score-intelligence-container").first();
            let template=container.find(".score-intelligence").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score").length);
            container.append(template);
        });

        $(document).on("click",".remove-statement-intelligence",function() {
            $(this).parents(".statement-intelligence").remove();
            let container=assessmentContainer.find("#statements-intelligence-container").first();
            let statements=container.find(".statement-intelligence:not(.template)");
            statements.each(function(i,statement) {
                $(statement).find(".statement-no").text(i+1);
            });
        });

        $(document).on("click",".remove-statement-detail-intelligence",function() {
            let container=assessmentContainer.find("#statements-intelligence-container").first();
           
            let statementIndex=$(this).parents(".statement").index();
            $(this).parents(".statement-detail").remove();
            
            let statementDetails=container.find(".statement").eq(statementIndex).find(".statement-detail:not(.template)");

            statementDetails.each(function(i,statementDetail) {
                $(statementDetail).find(".statement-detail-no").text(String.fromCharCode(ascii_A+i));
            });
        });

        $(document).on("click",".remove-score-intelligence",function() {
            $(this).parents(".score-intelligence").remove();
            let container=assessmentContainer.find("#score-intelligence-container").first();
             
            let scores=container.find(".score:not(.template)");
            scores.each(function(i,score) {
                $(score).find(".score-no").text(i+1);
            });
        });
        //END INTELIGENCE

        //START SENSORY
        $(document).on("click","#button_add_sensory",function() {
            let container=assessmentContainer.find("#sensories-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".sensory-no").text(container.find(".sensory").length);
            container.append(template);
        });

        $(document).on("click",".remove-sensory",function() {
            $(this).parents(".sensory").remove();
            let container=assessmentContainer.find("#sensories-container").first();
            let sensories=container.find(".sensory:not(.template)");
            sensories.each(function(i,sensory) {
                $(sensory).find(".sensory-no").text(i+1);
            });
        });

        $(document).on("click","#button_add_score_sensory",function() {
            let container=assessmentContainer.find("#scores-sensory-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score-sensory").length);
            container.append(template);
        });

        $(document).on("click",".remove-score-sensory",function() {
            $(this).parents(".score-sensory").remove();
            let container=assessmentContainer.find("#scores-sensory-container").first();
            let scores=container.find(".score-sensory:not(.template)");
            scores.each(function(i,score) {
                $(score).find(".score-no").text(i+1);
            });
        });

        $(document).on("click","#button-finish",function() {
            let disabledArea=assessmentContainer.find(".assessment-sensory:not(.template)>.sensories").first();
            let buttonCancel=assessmentContainer.find(".assessment-sensory:not(.template)").find("#button-cancel");

            disabledArea.addClass("disabled-area");

            buttonCancel.show();
            $(this).hide();

            let currentStatementsContainer=assessmentContainer.find(".assessment-sensory:not(.template)>.statements-sensory").first();
            currentStatementsContainer.removeClass("disabled-area");

            sensories=[];
            $(".sensory:not(.template)").each(function(i) {
                sensories.push
                    ({
                        sensory: $(this).find("input[name='input-sensory']").val()
                    });
            });


            //get last row from sensories table
            $.ajax({
                method: "GET",
                url: "/api/assessment/getLastSensory",
                beforeSend: function() {
                    $("select[name='select-sensory']").empty();
                    $("select[name='select-sensory']").append("<option class='sensory-label' value='0' disabled selected> -- SELECT AN OPTION -- </option>");
                },
                success: function(data) {
                    let fk_sensoryID=data;
                    $.each(sensories,function(i,value) {
                        $("select[name='select-sensory']").append("<option value='"+(fk_sensoryID+i+1)+"'>"+value.sensory+"</option>");
                    });
                }
            });
        });

        $(document).on("click","#button-cancel",function() {
            
            let disabledArea=assessmentContainer.find(".assessment-sensory:not(template)>.sensories").first();
            let buttonFinish=assessmentContainer.find(".assessment-sensory:not(template)").find("#button-finish");

            disabledArea.removeClass("disabled-area");

            buttonFinish.show();
            $(this).hide();

            let currentStatementsContainer=assessmentContainer.find(".assessment-sensory:not(.template)>.statements-sensory").first();
            currentStatementsContainer.addClass("disabled-area");
        });

        $(document).on("click","#button_add_statement_sensory",function() {
            let container=assessmentContainer.find("#statements-sensory-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-sensory").length);
            container.append(template);
        });

        $(document).on("click",".remove-statement-sensory",function() {
            $(this).parents(".statement-sensory").remove();
            let container=assessmentContainer.find("#statements-sensory-container").first();
            let statements=container.find(".statement-sensory:not(.template)");
            statements.each(function(i,statement) {
                $(statement).find(".statement-no").text(i+1);
            });
        });
        //END SENSORY

        //START PROCRASINATOR
        $(document).on("click","#button_add_statement_procrasinator",function() {
            let container=assessmentContainer.find("#statements-procrasinator-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".statement-no").text(container.find(".statement-procrasinator").length);
            container.append(template);
        });

        $(document).on("click",".remove-statement-procrasinator",function() {
            $(this).parents(".statement-procrasinator").remove();
            let container=assessmentContainer.find("#statements-procrasinator-container").first();
            let statements=container.find(".statement-procrasinator:not(.template)");
            statements.each(function(i,statement) {
                $(statement).find(".statement-no").text(i+1);
            });
        });

        $(document).on("click","#button_add_agreement_procrasinator",function() {
            let container=assessmentContainer.find("#agreements-procrasinator-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".agreement-no").text(container.find(".agreement").length);
            container.append(template);
        });

        $(document).on("click",".remove-agreement-procrasinator",function() {
            $(this).parents(".agreement").remove();
            let container=assessmentContainer.find("#agreements-procrasinator-container").first();
            let agreements=container.find(".agreement:not(.template)");
            agreements.each(function(i,agreement) {
                $(agreement).find(".agreement-no").text(i+1);
            });
        });

        $(document).on("click","#button_add_score_procrasinator",function() {
            let container=assessmentContainer.find("#scores-procrasinator-container").first();
            let template=container.find(".template").first();
            template=template.clone();
            template.removeClass("template");
            template.find(".input-field").removeClass("template");
            template.show();

            template.find(".score-no").text(container.find(".score-procrasinator").length);
            container.append(template);
        });

        $(document).on("click",".remove-score-procrasinator",function() {
            $(this).parents(".score-procrasinator").remove();
            let container=assessmentContainer.find("#scores-procrasinator-container").first();
            let scores=container.find(".score-procrasinator:not(.template)");
            scores.each(function(i,score) {
                $(score).find(".score-no").text(i+1);
            });
        });
        //END PROCRASINATOR

        $("#button_yes").click(function() {
            let assessmentType=parseInt(localStorage.getItem("assessmentTypeID"));

            let errors=$("#target-id").find(".has-error");
            let tempError=$("#target-id").find("textarea,input:not(.template)").filter(function() {
                return $.trim($(this).val()).length==0
            });

            if(errors.length!==0||tempError.length!==0) {
                $.fancybox("#popup_error");
                return;
            }
            else {
                $.fancybox("#popup_loading");
                switch(assessmentType) {
                    case 1:
                        let statementIntelligences=[];
                        let scoreIntelligences=[];

                        //add assessment intelligence
                        $(".statement-intelligence:not(.template)").each(function() {
                            let statementDetailIntelligences=[];
                            let temp=$(this).find(".statement-detail:not(.template)");
                            temp.each(function() {
                                statementDetailIntelligences.push({
                                    statementDetailIntelligence: $(this).find("input[name='input_statement_detail']").val()
                                });
                            });
                            statementIntelligences.push({
                                statementIntelligence: $(this).find("input[name='input_statement']").val(),
                                statementDetailIntelligences: statementDetailIntelligences
                            });
                        });

                        $(".score-intelligence:not(.template)").each(function() {
                            scoreIntelligences.push({
                                scoreValue: $(this).find("input[name='input_score_value']").val(),
                                scoreWord: $(this).find("input[name='input_score_word']").val()
                            });
                        });

                        $.ajax({
                            method: "PATCH",
                            url: "/api/assessment/updateAssessmentIntelligence",
                            data:
                            {
                                assessmentID : localStorage.getItem("assessmentID"),
                                assessmentTitle: $("input[name='input_assessment_title']").val(),
                                assessmentDescription: $("textarea[name='textarea_description']").val(),
                                statementIntelligences: statementIntelligences,
                                scoreIntelligences: scoreIntelligences
                            },
                            success: function() {
                                successRespone();
                            }
                        });
                        break;
                    case 2:
                        let statementSensories=[];
                        let scoreSensories=[];
                        let sensories=[];

                        $(".sensory:not(.template)").each(function() {
                            sensories.push({
                                sensory: $(this).find("input[name='input-sensory']").val()
                            });
                        });


                        $(".statement-sensory:not(.template)").each(function() {
                            statementSensories.push({
                                statementSensory: $(this).find("input[name='input-statement-sensory']").val(),
                                sensoryID: $(this).find("select[name='select-sensory']").val()
                            });
                        });

                        $(".score-sensory:not(.template)").each(function() {
                            scoreSensories.push({
                                scoreWord: $(this).find("input[name='input-score-word']").val(),
                                scoreValue: $(this).find("input[name='input-score-value']").val()
                            });
                        });

                        //console.log(sensories);
                        //console.log(statementSensories);
                        $.ajax({
                            method: "PATCH",
                            url: "/api/assessment/updateAssessmentSensory",
                            data:
                            {
                                assessmentID : localStorage.getItem("assessmentID"),
                                assessmentTitle: $("input[name='input_assessment_title']").val(),
                                assessmentDescription: $("textarea[name='textarea_description']").val(),
                                statementSensories: statementSensories,
                                sensories: sensories,
                                scoreSensories: scoreSensories
                            },
                            success: function(data) {
                                console.log(data);
                                //successRespone();
                            }
                        });
                        break;
                    case 3:
                        //add assessment procrasinator
                        let statementProcrasinators=[];
                        let scoreProcrasinators=[];
                        let agreements=[];

                        $(".statement-procrasinator:not(.template)").each(function() {
                            statementProcrasinators
                                .push({ statementProcrasinator: $(this).find("input[name='input-statement-procrasinator']").val() });
                        });


                        $(".agreement:not(.template)").each(function() {
                            agreements.push({
                                agreement: $(this).find("input[name='input-agreement']").val(),
                                agreementValue: $(this).find("input[name='input-agreement-value']").val()
                            });
                        });

                        $(".score-procrasinator:not(.template)").each(function() {
                            scoreProcrasinators.push({
                                scoreWord: $(this).find("input[name='input-score-word']").val(),
                                startValue: $(this).find("input[name='input-start-value']").val(),
                                endValue: $(this).find("input[name='input-end-value']").val()
                            });
                        });


                        $.ajax({
                            method: "PATCH",
                            url: "/api/assessment/updateAssessmentProcrasinator",
                            data:
                            {
                                assessmentID: localStorage.getItem("assessmentID"),
                                assessmentTitle: $("input[name='input_assessment_title']").val(),
                                assessmentDescription: $("textarea[name='textarea_description']").val(),
                                statementProcrasinators: statementProcrasinators,
                                agreements: agreements,
                                scoreProcrasinators: scoreProcrasinators
                            },
                            success: function() {
                                successRespone();
                            }
                        });
                        break;
                }
            }
        });

        $(document).on("focusout","input,textarea",function() {
            if($(this).val().length===0) {
                $(this).addClass("has-error");
            }
        });

        $(document).on("change","input,textarea",function() {
            if($(this).val().length!==0) {
                $(this).removeClass("has-error");
            }
        });

        function successRespone() {
            parent.$.fancybox.close();
            $.fancybox("#popup_success");
            window.location.href="/assessment/ManageAll";
        }
    </script>
}