
@{
    ViewBag.Title = "ShowAssessment";

}

@section css
{
    <link rel="stylesheet" type="text/css" href="~/Content/css/Assessment.css">
}

<div class="main-content has-widget" id="main-content">
    <div class="container">
        <div class="box-container">
            <div class="single-content popup-content " id="target-id">
                <div class="page-sub-heading">
                    <div class="row" style="height:30px;">
                        <div class="column two-thirds ">
                            <h2 id="assessment-title" class="page-heading" style="line-height:40px;">Assessment Detail</h2>
                        </div>
                        <div class="column one-third">
                            <p style="float:right;">
                                <a href="#popup_confirmation" class="fancybox-trigger fancbox.ajax button button-primary" id="button-submit" style="display:none;">Submit</a>
                            </p>
                        </div>
                    </div>
                </div>

                <p id="assessment-description" style="text-align: justify;">
                </p>

                <div class="showassessment" id="assessment-container" style="display:block;">

                </div>

                @RenderPage("~/Views/Shared/AssessmentStudent/AssessmentIntelligence.cshtml")
                @RenderPage("~/Views/Shared/AssessmentStudent/AssessmentSensory.cshtml")
                @RenderPage("~/Views/Shared/AssessmentStudent/AssessmentProcrasinator.cshtml")

                <p style="text-align:center;">
                    <button class="button button-orange" id="button-start" style="display:none;">Start Assessment</button>
                    <button class="button button-secondary" id="button-prev" style="display:none;">Previous</button>
                    <button class="button button-primary" id="button-next" style="display:none;">Next</button>
                    <button class="button button-orange" id="button-finish" style="display:none;">Finish</button>
                </p>

                <p style="text-align:center;">
                    <button id="button-submit" class="button button-primary" style="display:none;">Submit</button>
                </p>
            </div>
        </div>
    </div>
</div>

@RenderPage("~/Views/Shared/Popup/PopupConfirmation.cshtml")
@RenderPage("~/Views/Shared/Popup/PopupLoading.cshtml")

@section scripts {
    <script type="text/javascript">
        var assessmentContainer=$("#assessment-container");
        var assessmentIntelligenceContainer=$("#assessment-intelligence-container");
        var assessmentSensoryContainer=$("#assessment-sensory-container");
        var assessmentProcrasinatorContainer=$("#assessment-procrasinator-container");

        const ascii_A=65;

        $(document).ready(function() {
            if(localStorage.content!==undefined) {
                $("#target-id").html(localStorage.content);
                assessmentContainer=$("#assessment-container");
                assessmentIntelligenceContainer=$("#assessment-intelligence-container");
                assessmentSensoryContainer=$("#assessment-sensory-container");
            }
            else {
                $.ajax({
                    method: "GET",
                    url: "/api/assessment/getCurrentAssessment",
                    success: function(data) {

                        $("#assessment-title").text(data.assessmentTitle);
                        $("#assessment-description").text(data.assessmentDescription);

                        let assessmentID=data.assessmentID;
                        let assessmentTypeID=parseInt(data.assessmentTypeID);


                        switch(assessmentTypeID) {
                            //return assessment intelligence
                            case 1:
                                $.ajax({
                                    method: "GET",
                                    url: "/api/assessment/getCurrentAssessmentIntelligence",
                                    data: {
                                        assessmentID: assessmentID
                                    },
                                    success: function(data) {
                                        $("#button-start").show();

                                        let currentContainer=assessmentIntelligenceContainer;
                                        currentContainer=currentContainer.clone();
                                        currentContainer.removeClass("template");
                                        currentContainer.show();

                                        assessmentContainer.append(currentContainer);

                                        let test=assessmentContainer.find("#assessment-intelligence-container").first();
                                        data.statementIntelligences.forEach(function(statementIntelligence) {
                                            let template=assessmentIntelligenceContainer.find(".template").first();
                                            template=template.clone();
                                            template.removeClass("template");

                                            template.find(".statement-intelligence-no").text(
                                                test.find(".statement-intelligence").length+".");
                                            template.find(".statement-intelligence-value").text(
                                                statementIntelligence.statementIntelligence);

                                            statementIntelligence.statementDetailIntelligences.forEach(function(statementDetailIntelligence) {
                                                let currentDetailContainer=template.find("#statement-detail-intelligence-container").first();
                                                let templateDetail=currentDetailContainer.find(".template").first();
                                                templateDetail=templateDetail.clone();
                                                templateDetail.removeClass("template");
                                                templateDetail.show();

                                                templateDetail.find(".statement-detail-intelligence-no").text(
                                                    String.fromCharCode(currentDetailContainer.find(".statement-detail-intelligence:not(.template)").length+ascii_A)+".");
                                                templateDetail.find(".statement-detail-intelligence-value").text(statementDetailIntelligence.statementDetailIntelligence);

                                                let selectScore=templateDetail.find("select[name='select-score-statement-intelligence']");
                                                data.scoreIntelligences.forEach(function(scoreIntelligence) {
                                                    selectScore.append(
                                                        "<option value='"+scoreIntelligence.scoreValue+"'>"+scoreIntelligence.scoreWord+"</option>"
                                                    );
                                                });
                                                currentDetailContainer.append(templateDetail);
                                            });
                                            currentContainer.append(template);
                                        });
                                    }
                                });
                                break;
                            //return assessment sensory
                            case 2:
                                $.ajax({
                                    method: "GET",
                                    url: "/api/assessment/getCurrentAssessmentSensory",
                                    data: {
                                        assessmentID: assessmentID
                                    },
                                    success: function(data) {
                                        $("#button-start").show();

                                        let currentContainer=assessmentSensoryContainer;
                                        currentContainer=currentContainer.clone();
                                        currentContainer.removeClass("template");

                                        data.scoreSensories.forEach(function(scoreSensory) {
                                            let template=currentContainer.find(".header-sensory").first();

                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();
                                            template.text(scoreSensory.scoreWord);

                                            currentContainer.find("thead>tr").append(template);
                                            let inputTemplate=currentContainer.find(".sensory-word").first();
                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();

                                            currentContainer.find("tbody>tr").append(inputTemplate);
                                        });

                                        data.scoreSensories.forEach(function(scoreSensory) {
                                            let template=currentContainer.find(".sensory-word").first();
                                            
                                            template=template.clone();
                                            template.find(".input-sensory").addClass(scoreSensory.scoreWord);
                                            template.find(".input-sensory").attr("value",scoreSensory.scoreValue);
                                            template.removeClass("template");
                                            template.show();

                                            currentContainer.find("tbody>tr").append(template);
                                        });

                                        $(data.statementSensories).each(function(index,statementSensory) {
                                            let template=currentContainer.find(".row-sensory").first();
                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();

                                            template.find(".statement-sensory").text(statementSensory.statementSensory);
                                            template.find(".sensory").text(statementSensory.sensory.sensory);
                                            template.find(".sensory").addClass(statementSensory.sensory.sensory);
                                            template.find("input[name='input-sensory']").attr('name',"row"+index);
                                            currentContainer.find("tbody").append(template);
                                        });

                                        assessmentContainer.append(currentContainer);
                                    }
                                });
                                break;
                            //return asssessment procrasinator
                            case 3:
                                $.ajax({
                                    method: "GET",
                                    url: "/api/assessment/getCurrentAssessmentProcrasinator",
                                    data: {
                                        assessmentID: assessmentID
                                    },
                                    success: function(data) {
                                        console.log(data);
                                        $("#button-submit").show();
                                        let currentContainer=assessmentProcrasinatorContainer;
                                        currentContainer=currentContainer.clone();
                                        currentContainer.removeClass("template");
                                        currentContainer.show();

                                        data.agreements.forEach(function(agreement) {
                                            let template=currentContainer.find(".header-procrasinator").first();
                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();

                                            template.text(agreement.agreement);
                                            currentContainer.find("thead>tr").append(template);
                                        });

                                        data.agreements.forEach(function() {
                                            let template=currentContainer.find(".procrasinator-word").first();
                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();

                                            currentContainer.find("tbody>tr").append(template);
                                        });

                                        $(data.statementProcrasinators).each(function(index,statementProcrasinator) {
                                            let template=currentContainer.find(".row-procrasinator").first();
                                            template=template.clone();
                                            template.removeClass("template");
                                            template.show();

                                            template.find(".statement-procrasinator").text(statementProcrasinator.statementProcrasinator);
                                            template.find("input[name='input-procrasiantor']").attr('name',"row"+index);
                                            currentContainer.find("tbody").append(template);
                                        });

                                        assessmentContainer.append(currentContainer);
                                    }
                                });
                                break;
                        }
                    }
                });
            }
        });

        $("#button-start").click(function() {
                $.ajax({
                    method: "GET",
                    url: "/api/assessment/getCurrentAssessmentType",
                    success: function(data) {
                        assessmentContainer.show();
                        let assessmentTypeID=parseInt(data.assessmentTypeID);
                        let currentContainer;
                        switch(assessmentTypeID) {
                            case 1:
                                $("#button-next").show();
                                currentContainer=assessmentContainer.find("#assessment-intelligence-container").first();
                                let assessmentIntelligences=currentContainer.find(".statement-intelligence:not(.template)");

                                assessmentIntelligences.first().addClass("selected");
                                assessmentIntelligences.first().show();
                                break;
                            case 2: 
                                currentContainer = assessmentContainer.find("#assessment-sensory-container").first();
                                currentContainer.show();    
                                break;
                            case 3:
                                currentContainer = assessmentContainer.find("#assessment-procrasinator-container").first();
                                currentContainer.show();
                                break;
                        }
                    }
                });

            $("#button-submit").show();
            $(this).hide();
        });

        $(document).on("click","#button_yes",function() {

            let currentContainer;

            $.ajax({
                method : "GET",
                url: "/api/assessment/getCurrentAssessmentType",
                success : function (data)
                {
                    let assessmentTypeID = parseInt(data.assessmentTypeID);
                    switch(assessmentTypeID) {
                        case 1:
                            currentContainer=assessmentContainer.find("#assessment-intelligence-container").first();
                            let statementIntelligences=[];
                            let countStatementIntelligence=0;

                            currentContainer.find(".statement-intelligence:not(.template)").each(function() {
                                let currentDetailContainer=$(this).find("#statement-detail-intelligence-container").first();
                                currentDetailContainer.find(".statement-detail-intelligence:not(.template)").each(function() {
                                    countStatementIntelligence+=parseInt($(this).find("select[name='select-score-statement-intelligence']").val());
                                });

                                statementIntelligences.push({
                                    statementIntelligence: $(this).find(".statement-intelligence-value").text(),
                                    countStatementIntelligence: countStatementIntelligence
                                });

                                countStatementIntelligence=0;
                                statementDetailIntelligences=[];
                            });

                            statementIntelligences.sort(function(a,b) {
                                return b.countStatementIntelligence-a.countStatementIntelligence;
                            });

                            let maxCountScore=Math.max.apply(Math,statementIntelligences.map(function(statementIntelligence) { return statementIntelligence.countStatementIntelligence }));

                            statementIntelligences=statementIntelligences.filter(x => x.countStatementIntelligence===maxCountScore);

                            $.ajax({
                                method: "POST",
                                url: "/api/assessment/postAssessmentIntelligence",
                                data: {
                                    statementIntelligences: statementIntelligences
                                },
                                success: function() {
                                    localStorage.clear();
                                    window.location.href="/assessment/ResultPage";
                                }
                            });
                            break;
                        case 2:

                            $.ajax({
                                method : "GET",
                                url: "/api/assessment/getCurrentSensories",
                                success : function(data){
                                    console.log(data);
                                    currentContainer=assessmentContainer.find("#assessment-sensory-container").first();
                                    let scoreSensories=[];
                                    currentContainer.find(".header-sensory:not(.template)").each(function() {
                                        scoreSensories.push({
                                            scoreWord: $(this).text(),
                                            scoreValue: 0
                                        });
                                    });

                                    currentContainer.find(".row-sensory:not(.template)").each(function() {
                                        let temp=$(this).find("input:checked").first();
                                        console.log(temp.attr("class"));
                                        scoreSensories.forEach(function(scoreSensory) {
                                            
                                            if(temp.hasClass(scoreSensory.scoreWord)) {
                                                scoreSensory.scoreValue++;
                                            }
                                        });
                                    });


                                    console.log(scoreSensories);
                                }
                            });


                            

                          
                            break;
                        case 3:
                            break;
                    }
                }
            });
            
        });

        $(document).on("click","#button-next",function() {

            let currentContainer=assessmentContainer.find("#assessment-intelligence-container").first();
            let assessmentIntelligences=currentContainer.find(".statement-intelligence:not(.template,.selected)");
            let currentStatement=currentContainer.find(".selected");
            currentStatement.last().hide();

            assessmentIntelligences.first().addClass("selected");
            assessmentIntelligences.first().show();

            currentStatement=currentContainer.find(".selected");
            assessmentIntelligences=currentContainer.find(".statement-intelligence:not(.template)");

            if(assessmentIntelligences.length==currentStatement.length) {
                $(this).hide();
            }

            if(currentStatement.length>1) {
                $("#button-prev").show();
            }

            localStorage.content=$("#target-id").html();
        });

        $(document).on("click","#button-prev",function() {

            let currentContainer=assessmentContainer.find("#assessment-intelligence-container").first();
            let currentStatement=currentContainer.find(".selected");
            currentStatement.last().hide();
            currentStatement.last().removeClass("selected");
            currentStatement=currentContainer.find(".selected");
            currentStatement.last().hide();
            currentStatement.last().removeClass("selected");

            let assessmentIntelligences=currentContainer.find(".statement-intelligence:not(.template,.selected)");
            assessmentIntelligences.first().show();
            assessmentIntelligences.first().addClass("selected");

            currentStatement=currentContainer.find(".selected");
            assessmentIntelligences=currentContainer.find(".statement-intelligence:not(.template)");

            if(currentStatement.length<assessmentIntelligences.length) {
                $("#button-next").show();
            }

            if(currentStatement.length==1) {
                $(this).hide();
            }

            localStorage.content=$("#target-id").html();
        });

        $(document).on("change","input[type='radio']",function() {
            localStorage.content=$("#target-id").html();
        });

        $(document).on("change","select[name='select-score-statement-intelligence']",function() {
            localStorage.content=$("#target-id").html();
        });
    </script>
}
