
@{
    ViewBag.Title = "ShowAssessment";

}

@section css
{
    <link rel="stylesheet" type="text/css" href="~/Content/css/ShowAssessment.css">

}




<div class="main-content has-widget" id="main-content">
    <div class="container">
        <div class="box-container">
            <div class="single-content popup-content " id="target-id">

                <div class="page-sub-heading">
                    <h1 id="titleAssessment"></h1>
                    <p id="descriptionAssessment"></p>
                </div>

                <div class="showassessment">

                </div>


                <p>
                    <a class="button button-orange" id="startBtn">Start Test</a>
                    <a class="button button-secondary" id="prevBtn">Previous</a>
                    <a class="button button-primary" id="nextBtn">Next</a>

                    <a id="btnFinish" class="button button-orange">Finish</a>

                   
                </p>

                <p style="text-align:center;">
                    <a id="btnSubmit" class="button button-primary">Submit</a>
                </p>




            </div>
        </div>
    </div>
</div>

<div class="myLoader">
    <span class="loader">
        <span class="indicator"></span>
    </span>
</div>


@section scripts {
    <script type="text/javascript">

       

        $(document).ready(function () {

            var str = window.location.href;
            var res = str.split("/");
            var idAssessment = res[5];
            var tipeIdAssessment = res[6];
            var scores = [];
            
         //   console.log(idAssessment);
            $.ajax({
                method: "get",
                url: "/api/assessment/getDetailAssessment/"+idAssessment,
                success: function (data) {
                    
                    
                    //Untuk title
                     $('#titleAssessment').html(
                         '<strong>' + data.AssessmentTitle + '</strong>'
                         );
                    //untuk description
                     $('#descriptionAssessment').html(
                         '<strong>READ THE INSTRUCTION BEFORE DO THE TEST! </strong> <br>' +
                             data.AssessmentDescription
                         );

                     if (tipeIdAssessment == 1)
                     {
                         console.log(data.AssessmentIntelligences);
                         console.log("Intelligence");

                         showAssessmentIntelligence(data);
                         actionhideshowassessmentIntelligence();


                     }
                     else if (tipeIdAssessment == 2)
                     {
                         console.log(data.AssessmentSensories);
                         console.log("Sensory");
                         showAssessmentSensory(data);
                         


                     }
                     else if (tipeIdAssessment == 3)
                     {
                         console.log(data.AssessmentProcrasinators);
                         console.log("Procrastinator");
                         showAssessmentProcrastinator(data);


                     }



                }
            });

            //PARSING FUNCTION DARI INTELLIGENCE 
            var idx = 1;
          
            function showAssessmentIntelligence(data)
            {
                data.AssessmentIntelligences.forEach(function (value) {
                  //  console.log(value);


                    value.StatementIntelligences.forEach(function (results) {
                        //show statement intelligence
                        $('.showassessment').append(
                        "<div class='headerquestion' id='case-" + idx + "'>" +
                        "<p>" + results.StatementIntelligence + "</p>" +
                        "<ol type='a' >" +
                        "</ol>" +
                        "</div>"

                        );
                        //show detail statement intelligence
                        results.StatementDetailIntelligences.forEach(function (result) {
                            $('#case-' + idx).find($('ol')).append(
                                "<li>" +
                                result.StatementDetail +
                                " <select name='detailquestion' class='scoreassessment'>" +
                                "</select>" +
                                "</li>"
                            );
                        });

                        idx++;
                    })
                    //show score combo box
                    value.ScoreIntelligences.forEach(function (result) {
                        $('.scoreassessment').append(
                            '<option value="' + result.ScoreValue + '">' + result.ScoreWord + '</option>'
                        );

                    });
                });
            }




            function actionhideshowassessmentIntelligence() {
                // uda pasti ada di setiap soal , jadi gapapa static
                var finish = $('#btnFinish');
                var prv = $('#prevBtn');
                var nxt = $('#nextBtn');
                var str = $('#startBtn');
                var sbm = $('#btnSubmit');

                prv.hide();
                nxt.hide();
                sbm.hide();
                finish.hide();

                var caseassessment = [];
                for (var indexassesment = 1; indexassesment < idx ; indexassesment++) {
                    caseassessment.push($('#case-' + indexassesment));
                }

                for (var haha = 0; haha < caseassessment.length ; haha++) {
                    $(caseassessment[haha].selector).hide();
                }

                var indexClick = 0;
                var maximumClick = caseassessment.length;


                str.click(function () {
                    $(caseassessment[indexClick].selector).show();
                    prv.show();
                    nxt.show();
                    str.hide();
                   
                });



                prv.click(function () {

                    indexClick--;
                    var currentIndex = indexClick;
                    var prevIndex = indexClick - 1;
                    var nextIndex = indexClick + 1;


                    if (indexClick < 0) {
                        indexClick = 0;
                    }
                    else if (indexClick == 0) {
                        indexClick = 0;
                        $(caseassessment[indexClick].selector).show();
                        $(caseassessment[nextIndex].selector).hide();
                    }
                    else {
                        $(caseassessment[prevIndex].selector).hide();
                        $(caseassessment[indexClick].selector).show();
                        $(caseassessment[nextIndex].selector).hide();
                        nxt.show();
                        finish.hide();
                    }
                });

                nxt.click(function () {

                    if (validateJawab(indexClick) == true) {
                        indexClick++;
                    }


                    var prevIndex = indexClick - 1;
                    var nextIndex = indexClick + 1;

                    if (indexClick >= caseassessment.length - 1) {
                        indexClick = caseassessment.length - 1;
                        $(caseassessment[prevIndex].selector).hide();
                        $(caseassessment[indexClick].selector).show();
                        nxt.hide();
                        finish.show();
                    }
                    else {
                        $(caseassessment[prevIndex].selector).hide();
                        $(caseassessment[indexClick].selector).show();
                        $(caseassessment[nextIndex].selector).hide();
                    }



                });

                finish.click(function () {
                    kelolahasilDanInsertDB();

                });


            }

            function validateJawab(angka) {

                var headerQuestions = $('.headerquestion');

                var detailQuestions = $(headerQuestions[angka]).find('[name=detailquestion]');
                var result = 0;
                var totalDetailQuestion = detailQuestions.length;
                for (var j = 0 ; j < totalDetailQuestion ; j++) {
                    result += parseInt(detailQuestions[j].value) || 0;
                }

                console.log('Question ' + (angka + 1) + ' : ' + result);

                if (result > 10) {
                    alert('total answer case ke ' + (angka + 1) + ' tidak boleh lebih dari 10');
                    return false;
                }


                return true;
            }


            function kelolahasilDanInsertDB() {

                var headerQuestions = $('.headerquestion');
                var resultAssessment = [];
                var debug = 0;
                scores = [];
                for (var i = 0 ; i < headerQuestions.length ; i++) {

                    var detailQuestions = $(headerQuestions[i]).find('[name=detailquestion]');
                    var result = 0;
                    var totalDetailQuestion = detailQuestions.length;

                    for (var j = 0 ; j < totalDetailQuestion ; j++) {
                        result += parseInt(detailQuestions[j].value) || 0;
                    }

                    resultAssessment.push(result);
                    scores.push({
                        number: i + 1,
                        result: result
                    });

                }

                var finalresult = 0;
                var test = 0;
                for (var i = 1 ; i < resultAssessment.length; i++) {
                    finalresult = (resultAssessment[finalresult] > resultAssessment[i]) ? finalresult : i;

                }

                for (var i = 0; i < scores.length; i++) {
                    for (var j = 0; j < scores.length - i - 1 ; j++) {
                        if (scores[j].result < scores[j + 1].result) {
                            var temp = scores[j];
                            scores[j] = scores[j + 1];
                            scores[j + 1] = temp;
                        }
                    }
                }


                var finalScores = [];
                for (var i = 0; i < scores.length; i++) {
                    finalScores.push({
                        number: scores[i].number,
                        result: scores[i].result
                    });
                    if (scores.length != i) {

                        if (scores[i].result > scores[i + 1].result) {
                            break;
                        }

                    }

                }



                var finalResult = [];
                var idxScoreIntelligence = headerQuestions.length;
                var tampungRoleandDescription = [];
                var role = "";
                for (var z = 0 ; z < finalScores.length ; z++) {

                    tampungcaseresult = finalScores[z].number;

                    for (var j = 1 ; j <= idxScoreIntelligence ; j++)
                    {
                        tampungRoleandDescription.push($(headerQuestions).find('p')[j-1].innerText);

                        if (tampungcaseresult == j)
                        {
                            role = tampungRoleandDescription[j-1];
                        }
                    }

 


                    finalResult.push(role);
                    
                }
    
      


                $.ajax({
                    method: "post",
                    url: "/api/assessment/saveresult",
                    data:
                    {
                        assessmentid: idAssessment,
                        binusian_id: "bn190151515",
                        result: finalResult,
                        description: "-"
                    },
                    beforeSend: function (data) {
                        $(".myLoader").css('display', 'block');
                    },
                    success: function (data) {
                         console.log(data);
                        $(".myLoader").css('display', 'none');
                        location.href = "http://localhost:59382/Assessment/ResultPage/" + idAssessment + "/" + tipeIdAssessment;

                    }
                });
            }
            // END OF PARSING PARAMETER FUNCTION INTELLIGENCE STATEMENT





            //START FUNCTION PARSING PARAMETER SENSORY
            var idxSensory = 1;
            function showAssessmentSensory(data) {
                var finish = $('#btnFinish');
                var prv = $('#prevBtn');
                var nxt = $('#nextBtn');
                var str = $('#startBtn');
                var sbm = $('#btnSubmit');
                var columnscore = [];
                prv.hide();
                nxt.hide();
                sbm.hide();
                finish.hide();

                str.click(function () {
                    str.hide();
                    sbm.show();
                    $('.showassessment').append(
                        "<table class='zebra'>" +
                        "<thead>" +
                        "<tr class='trsensory'>" +
                        "<th>Assessment</th>" +
                        "<th class='lebartd'>Type</th>" +
                        "</tr>" +
                        "</thead>" +
                        "<tbody class='tbodysensory'>" +
                        "</tbody>" +
                        "</table>"

                    );
                    data.AssessmentSensories.forEach(function (value) {
                      //  console.log(value);

                        value.ScoreSensories.forEach(function (value) {

                            $('.trsensory').append(
                                "<th class='lebartd'>" + value.ScoreWord + "</th>"
                            );

                        });

                        value.StatementSensories.forEach(function (result) {

                            console.log(value.ScoreSensories.length);
                            $('.tbodysensory').append(

                                "<tr class='headerquestion' id='case-" + idxSensory + "'>" +
                                "<td>" + result.StatementSensory + "</td>" +
                                "<td >" + result.Sensory.Sensory + "</td>" +
                                "</tr>"
                            );

                            var angka = 5;
                            for (var i = 0 ; i < value.ScoreSensories.length; i++) {
                                $('#case-' + idxSensory).append
                                    (
                                     "<td>" +
                                    "    <input type='radio' class='subquestion' name='word" + idxSensory + "' value='" + angka + "' />" +
                                    "</td>"
                                    );
                                angka = angka - 2;
                            }


                            idxSensory++;

                            columnscore.push(result.Sensory.Sensory);
                        });

                    });



                    $('.zebra').find('td').css({
                        'font-size': '17px',
                        'padding': '20px',
                        'line-height': '25px'

                    });
                    $('input[type=radio]').css({
                        'width': '1.3em',
                        'height': '1.2em'
                    });
                    $('#btnSubmit').css({
                        'margin-top': '20px',

                    });

                    $('.lebartd').css('width', '100px');



                    sbm.click(function (e) {
                        e.preventDefault();
                        var headerQuestions = $('.headerquestion');
                        var ResAuditory = 0;
                        var ResVisual = 0;
                        var ResTactile = 0;
                        var sk = [];

                        for (var i = 0 ; i < headerQuestions.length ; i++) {
                            var detailQuestions = $(headerQuestions[i]).find('.subquestion:checked');
                            var result = 0;
                            var totalDetailQuestion = detailQuestions.length;
                            for (var j = 0 ; j < totalDetailQuestion ; j++) {
                                result += parseInt(detailQuestions[j].value) || 0;
                            }
                            console.log('Question ' + (i + 1) + ' : ' + result);

                            if (result == 0) {
                                alert('Soal nomor ' + (i + 1) + ' harus pilih salah satu');
                                return;
                            }

                            if ("Audio" == columnscore[i])
                                ResAuditory += result;
                            else if ("Visual" == columnscore[i])
                                ResVisual += result;
                            else if ("Tactile" == columnscore[i])
                                ResTactile += result;




                        }
                       
                        console.log('Audio ' + ResAuditory + ' Visual ' + ResVisual + ' Tactile :  ' + ResTactile);
                        var role = "";



                        var role = "Auditory";
                        if (ResVisual > ResTactile || ResVisual > ResAuditory)
                            role = "Visual";
                        else if (ResTactile > ResVisual || ResTactile > ResAuditory)
                            role = "Tactile";

                           console.log(role);
                           var finalResult = [];
                           finalResult.push(role);
                           console.log(finalResult);

                        $.ajax({
                            method: "post",
                            url: "/api/assessment/saveResult",
                            data:
                            {
                                assessmentid: idAssessment,
                                binusian_id: "bn190151515",
                                result: finalResult,
                                description: "-"
                            },
                            beforeSend: function (data) {
                                $(".myLoader").css('display', 'block');
                            },
                            success: function (data) {
                                 console.log(data);
                                $(".myLoader").css('display', 'none');

                                location.href = "http://localhost:59382/Assessment/ResultPage/" + idAssessment + "/" + tipeIdAssessment;

                            }
                        });


                    });

                });
            }



            //END OF FUNCTION PARSING PARAMETER SENSORY





            //START FUNCTION PARSING PARAMETER PROCRASTINATOR
            var idProcrastinator = 1;
            function showAssessmentProcrastinator(data)
            {
                var finish = $('#btnFinish');
                var prv = $('#prevBtn');
                var nxt = $('#nextBtn');
                var str = $('#startBtn');
                var sbm = $('#btnSubmit');

                prv.hide();
                nxt.hide();
                sbm.hide();
                finish.hide();

                str.click(function () {
                    str.hide();
                    sbm.show();
                    $('.showassessment').append(
                        "<table class='zebra'>" +
                        "<thead>" +
                        "<tr class='trprocrastinator'>" +
                        "<th>Assessment</th>" +
                        "</tr>" +
                        "</thead>" +
                        "<tbody class='tbodyprocrastinator'>" +
                        "</tbody>" +
                        "</table>"

                    );
                    data.AssessmentProcrasinators.forEach(function (value) {
                        console.log(value);

                        value.Agreements.forEach(function (result) {

                        $('.trprocrastinator').append(
                            "<th class='lebartd'>" + result.Agreement + "</th>"
                        );
                        
                        });

                        value.StatementProcrasinators.forEach(function (result) {

                            $('.tbodyprocrastinator').append(
                                "<tr class='headerquestion' id='case-" + idProcrastinator + "'>" +
                                "<td>" + result.StatementProcrasinator + "</td>" +
                                "</tr>"
                            );

                            var angka = value.Agreements.length;
                            for (var i = 0 ; i < value.Agreements.length; i++) {
                                $('#case-' + idProcrastinator).append
                                    (
                                     "<td>" +
                                    "    <input type='radio' class='subquestion' name='word" + idProcrastinator + "' value='" + angka + "' />" +
                                    "</td>"
                                    );
                                angka--;
                            }


                            idProcrastinator++;
                        });

                    });

                    

                    $('.zebra').find('td').css({
                        'font-size': '17px',
                        'padding': '20px',
                        'line-height': '25px'

                    });
                    $('input[type=radio]').css({
                        'width': '1.3em',
                        'height': '1.2em'
                    });
                    $('#btnSubmit').css({
                        'margin-top': '20px',

                    });

                    $('.lebartd').css('width', '100px');



                    sbm.click(function (e) {
                        e.preventDefault();
                        var headerQuestions = $('.headerquestion');
                        var totalResult = 0;
                        for (var i = 0 ; i < headerQuestions.length ; i++) {
                            var detailQuestions = $(headerQuestions[i]).find('.subquestion:checked');
                            var result = 0;
                            var totalDetailQuestion = detailQuestions.length;
                            for (var j = 0 ; j < totalDetailQuestion ; j++) {
                                result += parseInt(detailQuestions[j].value) || 0;
                                //            console.log(detailQuestions[j].value);
                                totalResult += result;
                            }
                            console.log('Question ' + (i + 1) + ' : ' + result);

                            if (result == 0) {
                                alert('Soal nomor ' + (i + 1) + ' harus pilih salah satu');
                                return;
                            }

                        }
                        console.log('Result : ' + totalResult);

                        var role = "";

             
                        
                        data.AssessmentProcrasinators.forEach(function (result) {
                            for (var j = 0 ; j < result.ScoreProcrasinators.length; j++) {
                                if (totalResult >= result.ScoreProcrasinators[j].StartValue && totalResult <= result.ScoreProcrasinators[j].EndValue)
                                    role = result.ScoreProcrasinators[j].ScoreWord;
                            }

                        });
                        var finalResult = [];
                        finalResult.push(role);
                     //   console.log(finalResult);

                        $.ajax({
                            method: "post",
                            url: "/api/assessment/saveResult",
                            data:
                            {
                                assessmentid: idAssessment,
                                binusian_id: "bn190151515",
                                result: finalResult,
                                description: "-"
                            },
                            beforeSend: function (data) {
                                $(".myLoader").css('display', 'block');
                            },
                            success: function (data) {
                                 console.log(data);
                                $(".myLoader").css('display', 'none');
                               
                                location.href = "http://localhost:59382/Assessment/ResultPage/" + idAssessment + "/" + tipeIdAssessment;

                            }
                        });


                    });

                });
            }
            //END OF FUNCTION PARSING PARAMETER PROCRASTINATOR
        });
    </script>
}
